help:
	@echo "Available make targets are:"
	@echo "bit    : Generate the .bit and .mmi files."
	@echo "update : Update the .bit file with a new QNICE ROM."
	@echo "clean  : Remove all generated files."

# Specify install location of the Xilinx Vivado tool
XILINX_DIR = /opt/Xilinx/Vivado/2019.2

# Specify location of the QNICE ROM
ROM=QNICE/osm_rom.rom

# Specify the board revision - used as project name
BOARD=test_hdmi

# Specfy the top-level entity name
TOP=top_test_hdmi

# Specify source files
PPRDIR=.
VHDL2008=\
	$(PPRDIR)/vhdl/clk.vhd \
	$(PPRDIR)/vhdl/drivers/vga_to_hdmi.vhd \
	$(PPRDIR)/vhdl/drivers/types_pkg.vhd \
	$(PPRDIR)/vhdl/drivers/serialiser_10to1_selectio.vhd \
	$(PPRDIR)/vhdl/drivers/hdmi_tx_encoder.vhd \
	$(PPRDIR)/vhdl/test_audio.vhd \
	$(PPRDIR)/vhdl/top_test_hdmi.vhd

VHDL=\
	$(PPRDIR)/vhdl/drivers/pcm_to_pdm.vhdl \
	$(PPRDIR)/vhdl/drivers/kb_matrix_ram.vhdl \
	$(PPRDIR)/vhdl/drivers/mega65kbd_to_matrix.vhdl \
	$(PPRDIR)/vhdl/video/vga_controller.vhd



###################################################################
# Anything below here should probably not be changed
###################################################################

SOURCES = $(VHDL) $(VHDL2008)

BIT=build/$(BOARD).bit
MMI=build/$(BOARD).mmi
XDC=$(BOARD).xdc
TCL=build/$(BOARD).tcl
DCP=build/$(BOARD).dcp
MEM=build/$(BOARD).mem
ROM_BIT=build/$(BOARD)-rom.bit


bit: $(BIT)

# Generate the build script used by Vivado
$(TCL): Makefile.test_hmdi
	mkdir -p build
	echo "# This is a tcl command script for the Vivado tool chain" > $@
	echo "read_vhdl -vhdl2008 { $(VHDL2008) }" >> $@
	echo "read_vhdl { $(VHDL) }" >> $@
	echo "read_xdc $(XDC)" >> $@
	echo "set_property XPM_LIBRARIES {XPM_CDC} [current_project]" >> $@
	echo "synth_design -top $(TOP) -part xc7a200tfbg484-1 -flatten_hierarchy none" >> $@
	echo "opt_design" >> $@
	echo "place_design" >> $@
	echo "phys_opt_design" >> $@
	echo "route_design" >> $@
	echo "write_checkpoint -force $(DCP)" >> $@
	echo "write_bitstream -force $(BIT)" >> $@
	echo "set mmi_file $(MMI)" >> $@
	echo "source gen-mmi.tcl" >> $@
	echo "exit" >> $@

# Generate the bit-file used to configure the FPGA
$(BIT): $(TCL) $(SOURCES) $(XDC)
	bash -c "source $(XILINX_DIR)/settings64.sh ; vivado -mode tcl -source $<"

# Generate the mmi-file used for updating the bit-file with new QNICE ROM
$(MMI):
	@echo "You need to generate the .bit and .mmi file first"
	@exit -1

# Convert the QNICE ROM into a .mem file needed by the update utility
$(MEM): $(ROM)
	./rom2mem.py $(ROM) $(MEM)

# Update bit-file with new QNICE ROM
update: $(MMI) $(MEM)
	bash -c "source $(XILINX_DIR)/settings64.sh ; \
		updatemem -debug -meminfo $(MMI) -data $(MEM) -proc dummy -bit $(BIT) -out $(ROM_BIT) -force"

clean:
	rm -rf build
	rm -f updatemem*
	rm -f usage_statistics_webtalk.*
	rm -f vivado*
	rm -f webtalk*
	rm -rf MEGA65-R2.cache/
	rm -rf MEGA65-R2.hw/
	rm -rf MEGA65-R2.ip_user_files/
	rm -rf MEGA65-R2.runs/
	rm -rf MEGA65-R2.sim/
	rm -rf MEGA65-R3.cache/
	rm -rf MEGA65-R3.hw/
	rm -rf MEGA65-R3.ip_user_files/
	rm -rf MEGA65-R3.runs/
	rm -rf MEGA65-R3.sim/

